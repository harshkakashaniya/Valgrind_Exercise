viki@ubuntu:~/Desktop/Week 5/valgrindExercise/build$ valgrind ./app/shell-app 
==25942== Memcheck, a memory error detector
==25942== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==25942== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==25942== Command: ./app/shell-app
==25942== 
Averaged sensor reading: 10
==25942== Conditional jump or move depends on uninitialised value(s)
==25942==    at 0x401DC7: main (main.cpp:9)
==25942== 
==25942== 
==25942== HEAP SUMMARY:
==25942==     in use at exit: 72,748 bytes in 3 blocks
==25942==   total heap usage: 4 allocs, 1 frees, 73,772 bytes allocated
==25942== 
==25942== LEAK SUMMARY:
==25942==    definitely lost: 24 bytes in 1 blocks
==25942==    indirectly lost: 20 bytes in 1 blocks
==25942==      possibly lost: 0 bytes in 0 blocks
==25942==    still reachable: 72,704 bytes in 1 blocks
==25942==         suppressed: 0 bytes in 0 blocks
==25942== Rerun with --leak-check=full to see details of leaked memory
==25942== 
==25942== For counts of detected and suppressed errors, rerun with: -v
==25942== Use --track-origins=yes to see where uninitialised values come from
==25942== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)

---------------------------------------------------------
valgrind --tool=helgrind ./app/shell-app 

==25963== Helgrind, a thread error detector
==25963== Copyright (C) 2007-2015, and GNU GPL'd, by OpenWorks LLP et al.
==25963== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==25963== Command: ./app/shell-app
==25963== 
Averaged sensor reading: 10
==25963== 
==25963== For counts of detected and suppressed errors, rerun with: -v
==25963== Use --history-level=approx or =none to gain increased speed, at
==25963== the cost of reduced accuracy of conflicting-access information
==25963== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)

---------------------------------------------------------

valgrind --leak-check=full ./app/shell-app 

==25986== Memcheck, a memory error detector
==25986== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==25986== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==25986== Command: ./app/shell-app
==25986== 
Averaged sensor reading: 10
==25986== Conditional jump or move depends on uninitialised value(s)
==25986==    at 0x401DC7: main (main.cpp:9)
==25986== 
==25986== 
==25986== HEAP SUMMARY:
==25986==     in use at exit: 72,748 bytes in 3 blocks
==25986==   total heap usage: 4 allocs, 1 frees, 73,772 bytes allocated
==25986== 
==25986== 44 (24 direct, 20 indirect) bytes in 1 blocks are definitely lost in loss record 2 of 3
==25986==    at 0x4C2E0EF: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==25986==    by 0x401EEA: AnalogSensor::Read() (AnalogSensor.cpp:16)
==25986==    by 0x401D9A: main (main.cpp:7)
==25986== 
==25986== LEAK SUMMARY:
==25986==    definitely lost: 24 bytes in 1 blocks
==25986==    indirectly lost: 20 bytes in 1 blocks
==25986==      possibly lost: 0 bytes in 0 blocks
==25986==    still reachable: 72,704 bytes in 1 blocks
==25986==         suppressed: 0 bytes in 0 blocks
==25986== Reachable blocks (those to which a pointer was found) are not shown.
==25986== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==25986== 
==25986== For counts of detected and suppressed errors, rerun with: -v
==25986== Use --track-origins=yes to see where uninitialised values come from
==25986== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)

After 1 error resolved
==26449== Memcheck, a memory error detector
==26449== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==26449== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==26449== Command: ./app/shell-app
==26449== 
Averaged sensor reading: 10
DONE
==26449== 
==26449== HEAP SUMMARY:
==26449==     in use at exit: 72,748 bytes in 3 blocks
==26449==   total heap usage: 4 allocs, 1 frees, 73,772 bytes allocated
==26449== 
==26449== 44 (24 direct, 20 indirect) bytes in 1 blocks are definitely lost in loss record 2 of 3
==26449==    at 0x4C2E0EF: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==26449==    by 0x401EEE: AnalogSensor::Read() (AnalogSensor.cpp:16)
==26449==    by 0x401D9A: main (main.cpp:7)
==26449== 
==26449== LEAK SUMMARY:
==26449==    definitely lost: 24 bytes in 1 blocks
==26449==    indirectly lost: 20 bytes in 1 blocks
==26449==      possibly lost: 0 bytes in 0 blocks
==26449==    still reachable: 72,704 bytes in 1 blocks
==26449==         suppressed: 0 bytes in 0 blocks
==26449== Reachable blocks (those to which a pointer was found) are not shown.
==26449== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==26449== 
==26449== For counts of detected and suppressed errors, rerun with: -v
==26449== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)


-------------------------------------------------------------------------
valgrind --tool=callgrind ./app/shell-app
 
==26003== Callgrind, a call-graph generating cache profiler
==26003== Copyright (C) 2002-2015, and GNU GPL'd, by Josef Weidendorfer et al.
==26003== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==26003== Command: ./app/shell-app
==26003== 
==26003== For interactive control, run 'callgrind_control -h'.
Averaged sensor reading: 10
==26003== 
==26003== Events    : Ir
==26003== Collected : 2193878
==26003== 
==26003== I   refs:      2,193,878

